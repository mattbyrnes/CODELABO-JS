{"version":3,"sources":["components/ProjectList.js","components/App.js","serviceWorker.js","index.js"],"names":["ProjectList","props","listofProjects","list","map","item","console","log","react_default","a","createElement","className","onClick","clickhandler","_id","id","name","clickhandler2","require","App","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updatePreview","value","previewFrame","document","getElementById","preview","contentDocument","contentWindow","open","write","state","selectedProject","html","css","javascript","close","deleteProject","Id","axios","get","concat","then","delete","data","catch","err","updateProject","put","res","updateHTML","updateCSS","updateJS","getProject","setState","projectList","inherits","createClass","key","getAllProjects","_this2","_this3","react_codemirror2","options","mode","lineNumbers","onChange","editor","theme","autoCloseTags","lineWrapping","foldGutter","title","components_ProjectList","Component","Boolean","window","location","hostname","match","ReactDOM","render","components_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cc95a724.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ProjectList = (props) => {\r\n\tconst listofProjects = props.list.map((item) => {\r\n\t\tconsole.log(item)\r\n\t\treturn (\r\n\t\t\t<div className=\"project-item\">\r\n\t\t\t<button onClick={() => props.clickhandler(item._id)} className=\"open-btn\" id={item._id}>{item.name}</button>\r\n\t\t\t<button onClick={() => props.clickhandler2(item._id)} className=\"del-btn\" id={item._id}> X </button>\r\n\t\t\t</div>\r\n\t\t)\r\n\r\n\t})\r\n\treturn (\r\n\t\t<div >\r\n\t\t\t{listofProjects}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport '../codemirror.css';\r\nimport '../monokai.css';\r\nimport '../reset.css';\r\nimport '../style.css';\r\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\r\nimport ProjectList from './ProjectList';\r\n// import ProjectPreview from './ProjectPreview';\r\nrequire('codemirror/mode/xml/xml');\r\nrequire('codemirror/mode/css/css');\r\nrequire('codemirror/mode/javascript/javascript');\r\n\r\nexport class App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tprojectList: [],\r\n\t\t\thtml: {},\r\n\t\t\tcss: {},\r\n\t\t\tjavascript: {},\r\n\t\t\tselectedProject: {}\r\n\t\t}\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.getAllProjects();\r\n\t\tthis.getProject();\r\n\t\tthis.updatePreview();\r\n\t\tthis.updateProject();\r\n\t}\r\n\r\n\t// Update Preview\r\n\tupdatePreview = value => {\r\n\r\n\t\t// var html = (\"#htmlEditor\")[0];\r\n\t\t// var css = (\"#cssEditor\")[0];\r\n\t\t// var javascript = (\"#jsEditor\")[0];\r\n\r\n\t\tvar previewFrame = document.getElementById('preview');\r\n\t\tvar preview = previewFrame.contentDocument || previewFrame.contentWindow.document;\r\n\t\tpreview.open();\r\n\r\n\t\t// preview.write({selectedProject: value});\r\n\t\tpreview.write(this.state.selectedProject.html);\r\n\t\tpreview.write(this.state.selectedProject.css);\r\n\t\tpreview.write(this.state.selectedProject.javascript);\r\n\r\n\t\tpreview.close();\r\n\t}\r\n\r\n\t// Get All Projects\r\n\tgetAllProjects() {\r\n\t\taxios.get(`/api/project`)\r\n\t\t\t.then((list) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tprojectList: list.data\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.catch(function (err) {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t})\r\n\t}\r\n\r\n\t// Delete Function\r\n\tdeleteProject = Id => {\r\n\t\tconsole.log(\"Delete Button Click\");\r\n\t\taxios.get(`/api/project/${Id}`)\r\n\t\t\t.then((item) => {\r\n\t\t\t\taxios.delete({\r\n\t\t\t\t\tselectedProject: item.data\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.catch(function (err) {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t})\r\n\t}\r\n\r\n\t// Update Functions\r\n\tupdateProject = value => {\r\n\t\taxios.put(`/api/project/${this.state.selectedProject._id}`, { name: value })\r\n\t\t\t.then(res => console.log(res))\r\n\t}\r\n\tupdateHTML = value => {\r\n\t\taxios.put(`/api/project/${this.state.selectedProject._id}`, { html: value })\r\n\t\t\t.then(res => console.log(res))\r\n\t}\r\n\tupdateCSS = value => {\r\n\t\taxios.put(`/api/project/${this.state.selectedProject._id}`, { css: value })\r\n\t\t\t.then(res => console.log(res))\r\n\t}\r\n\tupdateJS = value => {\r\n\t\taxios.put(`/api/project/${this.state.selectedProject._id}`, { javascript: value })\r\n\t\t\t.then(res => console.log(res))\r\n\t}\r\n\r\n\t// Get Selected Project\r\n\tgetProject = Id => {\r\n\t\taxios.get(`/api/project/${Id}`)\r\n\t\t\t.then((item) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tselectedProject: item.data\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.catch(function (err) {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<section>\r\n\t\t\t\t<form>\r\n\t\t\t\t\t<div className=\"edit-col\">\r\n\t\t\t\t\t\t<div className=\"title-input\">\r\n\t\t\t\t\t\t\t<CodeMirror\r\n\t\t\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.selectedProject.name}\r\n\t\t\t\t\t\t\t\toptions={{\r\n\t\t\t\t\t\t\t\t\tmode: 'text/html',\r\n\t\t\t\t\t\t\t\t\tlineNumbers: false\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonChange={(editor, data, value) => {\r\n\t\t\t\t\t\t\t\t\tthis.updateProject(value)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div id=\"htmlEditor\">\r\n\t\t\t\t\t\t\t<CodeMirror\r\n\t\t\t\t\t\t\t\tvalue={this.state.selectedProject.html}\r\n\t\t\t\t\t\t\t\toptions={{\r\n\t\t\t\t\t\t\t\t\tmode: 'xml',\r\n\t\t\t\t\t\t\t\t\ttheme: 'monokai',\r\n\t\t\t\t\t\t\t\t\tlineNumbers: true,\r\n\t\t\t\t\t\t\t\t\tautoCloseTags: true,\r\n\t\t\t\t\t\t\t\t\tlineWrapping: true,\r\n\t\t\t\t\t\t\t\t\tfoldGutter: true\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonChange={(editor, data, value, preview) => {\r\n\t\t\t\t\t\t\t\t\tthis.updateHTML(value)\r\n\t\t\t\t\t\t\t\t\tthis.updatePreview(preview)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div id=\"cssEditor\">\r\n\t\t\t\t\t\t\t<CodeMirror\r\n\t\t\t\t\t\t\t\tvalue={this.state.selectedProject.css}\r\n\t\t\t\t\t\t\t\toptions={{\r\n\t\t\t\t\t\t\t\t\tmode: 'css',\r\n\t\t\t\t\t\t\t\t\ttheme: 'monokai',\r\n\t\t\t\t\t\t\t\t\tlineNumbers: true,\r\n\t\t\t\t\t\t\t\t\tautoCloseTags: true,\r\n\t\t\t\t\t\t\t\t\tlineWrapping: true,\r\n\t\t\t\t\t\t\t\t\tfoldGutter: true\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonChange={(editor, data, value) => {\r\n\t\t\t\t\t\t\t\t\tthis.updateCSS(value)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div id=\"jsEditor\">\r\n\t\t\t\t\t\t\t<CodeMirror\r\n\t\t\t\t\t\t\t\tvalue={this.state.selectedProject.javascript}\r\n\t\t\t\t\t\t\t\toptions={{\r\n\t\t\t\t\t\t\t\t\tmode: 'javascript',\r\n\t\t\t\t\t\t\t\t\ttheme: 'monokai',\r\n\t\t\t\t\t\t\t\t\tlineNumbers: true,\r\n\t\t\t\t\t\t\t\t\tautoCloseTags: true,\r\n\t\t\t\t\t\t\t\t\tlineWrapping: true,\r\n\t\t\t\t\t\t\t\t\tfoldGutter: true\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonChange={(editor, data, value) => {\r\n\t\t\t\t\t\t\t\t\tthis.updateJS(value)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"preview-col\">\r\n\t\t\t\t\t\t<label>Preview</label>\r\n\t\t\t\t\t\t<div className=\"device\">\r\n\t\t\t\t\t\t\t{/* <ProjectPreview /> */}\r\n\t\t\t\t\t\t\t<iframe title=\"preview\" id=\"preview\"></iframe>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t\t<button id=\"myBtn\" className=\"projects-btn\">My Projects</button>\r\n\r\n\t\t\t\t<div id=\"myModal\" className=\"modal\">\r\n\t\t\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t\t\t<span className=\"close\">&times;</span>\r\n\t\t\t\t\t\t<h2>My Projects</h2><br /><br />\r\n\t\t\t\t\t\t<div id=\"projectlist\">\r\n\t\t\t\t\t\t\t<ProjectList\r\n\t\t\t\t\t\t\t\tlist={this.state.projectList}\r\n\t\t\t\t\t\t\t\tclickhandler={this.getProject}\r\n\t\t\t\t\t\t\t\tclickhandler2={this.deleteProject}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</section>\r\n\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}